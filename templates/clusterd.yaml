{{- if .Values.clusterd.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clusterd
  namespace: mindx-dl
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-clusterd-role
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "update", "watch", "patch" ]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "update", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["get", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "delete", "create", "update"]
  - apiGroups: ["batch.volcano.sh"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "update", "delete"]
  - apiGroups: ["scheduling.incubator.k8s.io", "scheduling.volcano.sh"]
    resources: ["podgroups"]
    verbs: ["list", "watch", "update", "get"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pods-clusterd-rolebinding
subjects:
  - kind: ServiceAccount
    name: clusterd
    namespace: mindx-dl
roleRef:
  kind: ClusterRole
  name: pods-clusterd-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: coordination.k8s.io/v1
kind: Lease
metadata:
  namespace: mindx-dl
  name: cluster-info-collector
---
apiVersion: v1
kind: Service
metadata:
  name: clusterd-grpc-svc
  namespace: mindx-dl
spec:
  selector:
    app: clusterd
  ports:
    - protocol: TCP
      port: {{ .Values.clusterd.service.port | default 8899 }}
      targetPort: {{ .Values.clusterd.service.targetPort | default 8899 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clusterd
  namespace: mindx-dl
spec:
  replicas: {{ .Values.clusterd.replicas | default 1 }}
  selector:
    matchLabels:
      app: clusterd
  template:
    metadata:
      labels:
        app: clusterd
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
    spec:
    {{- with .Values.clusterd.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: clusterd
      initContainers:
        {{- include "initContainer.createDir" (dict 
          "path" (include "extractPath" .Values.clusterd.args.logFile)
          "owner" "hwMindX:hwMindX"
          "mountPath" "/var/log/mindx-dl"
        ) | nindent 8 }}
      containers:
        - name: clusterd
          image: {{ .Values.clusterd.image.repository | default (printf "%s/%s" .Values.global.imageRegistry "clusterd") }}:{{ .Values.clusterd.image.tag | default .Values.global.imageTag }}
        {{- with .Values.clusterd.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.clusterd.image.pullPolicy | default .Values.global.imagePullPolicy }}
          command: [ "/bin/bash", "-c", "--"]
          args:
          - |
            /usr/local/bin/clusterd {{ include "extraArgs" .Values.clusterd.args }}
        {{- with .Values.clusterd.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          volumeMounts:
          - name: log-clusterd
            mountPath: {{ .Values.clusterd.args.logFile | include "extractPath" }}
          - name: localtime
            mountPath: /etc/localtime
            readOnly: true 
        {{- with .Values.clusterd.extraVolumeMounts }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
      - name: mindx-dl-log
        hostPath:
          path: /var/log/mindx-dl
          type: DirectoryOrCreate
      - name: log-clusterd
        hostPath:
          path: {{ .Values.clusterd.args.logFile | include "extractPath" }}
          type: Directory
      - name: localtime
        hostPath:
          path: /etc/localtime
    {{- with .Values.clusterd.extraVolumes }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
{{- end }}                 
        

  